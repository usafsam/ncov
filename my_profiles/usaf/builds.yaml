# This is where we define which builds we'd like to run.
# You can comment-out, remove, or add as many builds as you'd like.

# Each build needs a name, a defined subsampling process, and geographic attributes used for subsampling.
# Geography is specified by build attributes (e.g., `region`, `country`, `division`, `location`) that are referenced from subsampling schemes.

# The default config file, `./defaults/parameters.yaml` has reasonable default subsampling methods for each geographic resolution.
# These subsample primarily from the area of interest ("focus"), and add in background ("contextual") sequences from the rest of the world.
# Contextual sequences that are genetically similar to (hamming distance) and geographically near the focal sequences are heavily prioritized.

# In this example, we use these default methods. See other templates for examples of how to customize this subsampling scheme.

inputs:
- name: epicc
  metadata: data/Epicc_all_through_210407_noS.tsv
  sequences: data/Epicc_all_through_210407_noS.fas
- name: gisaid
  metadata: data/metadata_tsv_2021-09-09.tar.xz
  sequences: data/sequences_fasta_2021-09-09.tar.xz


builds:
  # with a build name that will produce the following URL fragment on Nextstrain/auspice:
  usafsam:
    subsampling_scheme: usafsam-all
    # geographic_scale: country
    region: North America
    country: USA

  # Build with all Ohio Sequences with USAFSAM focus
  usafsam-ohio:
    subsampling_scheme: usafsam-division
    geographic_scale: division
    region: North America
    country: USA
    division: Ohio

  # Build with all USA Sequences with USAFSAM focus
  usafsam-usa:
    subsampling_scheme: usafsam-country
    geographic_scale: division
    region: North America
    country: USA

  # Build with all international sequences with USAFSAM focus
  usafsam-international:
    subsampling_scheme: usafsam-noncountry
    geographic_scale: country
    region: North America
    country: USA

  # Build with all EPICC sequences
  epicc:
    subsampling_scheme: epicc
    region: North America
    country: USA

  # Build with only USAFSAM sequences submitted to GISAID
  usafsam-only:
    subsampling_scheme: usafsam-only

# Ensure inclusion of all the EPICC samples
filter:
  epicc:
    min_length: 5000 # Allow shorter (partial) genomes
    skip_diagnostics: true # skip diagnostics (which can remove genomes) for this input

# Define custom subsampling logic for county-level builds.
subsampling:
  usafsam-all:
    # Focal samples which are all USAFSAM
    usafsam:
      group_by: month
      seq_per_group: 2000
      # Use augur filter's query argument to filter strains with pandas-style logic expressions.
      # This can be easier to read than the corresponding filter by exclusion.
      # exclude: "--exclude-where 'submitting_lab!=Public Health, United States Air Force School of Aerospace Medicine' 'submitting_lab!=Public Health, United States Air Force School of Aerospace Medicine' 'submitting_lab!=U.S. Air Force School of Aerospace Medicine'"
      query: --query '(strain.str.contains("USAFSAM")) & (gisaid == "yes")'

  # Samples that are genetically related to the focal samples
    related:
      group_by: region month
      # seq_per_group: 25
      max_sequences: 500
      # exclude: --exclude-where 'region!={region}'
      query: --query '(~ strain.str.contains("USAFSAM")) & (gisaid == "yes")'
      priorities:
        type: proximity
        focus: usafsam

    # Contextual samples from the rest of the world
    contextual:
      group_by: region month
      # seq_per_group: 10
      max_sequences: 500
      # exclude: "--exclude-where 'region={region}'"
      query: --query '(gisaid == "yes")'
      # priorities:
      #   type: "proximity"
      #   focus: "usafsam"

  usafsam-division:
    # Focal samples which have all USAFSAM specimens in a specific
    # administrative subdivision
    division:
      group_by: division month
      # seq_per_group: 10
      max_sequences: 500
      query: --query '(strain.str.contains("USAFSAM")) & (division == "{division}")
        & (gisaid == "yes")'

    # Samples genetically related to the Focal samples
    # This rule is based on DeMorgan's laws
    related:
      group_by: region month
      max_sequences: 500
      query: --query '((~ strain.str.contains("USAFSAM")) | (division != "{division}"))
        & (gisaid == "yes")'
      priorities:
        type: proximity
        focus: division

    # Fill out the rest of the globe
    contextual:
      group_by: region month
      max_sequences: 500
      query: --query '(gisaid == "yes")'

  usafsam-country:
    # Focal samples which have all USAFSAM specimens in a specific country
    country:
      group_by: country month
      # seq_per_group: 10
      max_sequences: 500
      query: --query '(strain.str.contains("USAFSAM")) & (country == "{country}")
        & (gisaid == "yes")'

    # Samples genetically related to the Focal samples
    # This rule is based on DeMorgan's laws
    related:
      group_by: region month
      max_sequences: 500
      query: --query '((~ strain.str.contains("USAFSAM")) | (country != "{country}"))
        & (gisaid == "yes")'
      priorities:
        type: proximity
        focus: country

    # Fill out the rest of the globe
    contextual:
      group_by: region month
      max_sequences: 500
      query: --query '(gisaid == "yes")'

  usafsam-noncountry:
    # Focal samples which have all USAFSAM specimens outside a specific country
    noncountry:
      group_by: country month
      # seq_per_group: 10
      max_sequences: 500
      query: --query '(strain.str.contains("USAFSAM")) & (country != "{country}")
        & (gisaid == "yes")'

    # Samples genetically related to the Focal samples
    # This rule is based on DeMorgan's laws
    related:
      group_by: region month
      max_sequences: 500
      query: --query '((~ strain.str.contains("USAFSAM")) | (country == "{country}"))
        & (gisaid == "yes")'
      priorities:
        type: proximity
        focus: noncountry

    # Fill out the rest of the globe
    contextual:
      group_by: region month
      max_sequences: 500
      query: --query '(gisaid == "yes")'

  epicc:
    # Focal samples for all EPICC samples
    epicc-only:
      query: --query '(epicc == "yes")'

    # Samples genetically related to the samples above
    epicc-related:
      group_by: region month
      max_sequences: 500
      query: --query '(gisaid == "yes")'
      priorities:
        type: proximity
        focus: epicc-only

    # Fill out the rest of the globe
    epicc-contextual:
      group_by: region month
      max_sequences: 500
      query: --query '(gisaid == "yes")'

  usafsam-only:
    # Same as the other USAFSAM build, but without any context
    usafsam:
      group_by: month
      seq_per_group: 2000
      query: --query '(strain.str.contains("USAFSAM")) & (gisaid == "yes")'

# Here, you can specify what type of auspice_config you want to use
# and what description you want. These will apply to all the above builds.
# If you want to specify specific files for each build - you can!
# See the 'example_advanced_customization' builds.yaml
files:
  auspice_config: my_profiles/usaf/my_auspice_config.json
  description: my_profiles/usaf/my_description.md

# Avoid this exception:
# "Where thereâ€™s SAMPLING_TRAIT we should always have EXPOSURE_TRAIT"
skip_travel_history_adjustment: true
